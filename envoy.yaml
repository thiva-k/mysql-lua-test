static_resources:
  listeners:
    - name: main
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8000
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: web_service
                http_filters:
                  # Ensure Lua filter is applied first
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        local mysql = require 'mysql'

                        local params = {
                            host = 'mysql',
                            port = 3306,
                            user = 'root',
                            password = 'root',
                            db = 'rate_limits',
                            charset = 'utf8',
                        }

                        function perform_mysql_query(request_handle)
                            request_handle:logInfo("Trying to connect to MySQL...")
                            assert(mysql.connect{
                            host = 'mysql',
                            port = 3306,
                            user = 'root',
                            password = 'root',
                            db = 'rate_limits',
                            charset = 'utf8',
                            })

                            request_handle:logInfo("MySQL connection successful!")

                            -- Perform your queries here
                        end

                        function envoy_on_request(request_handle)
                            -- Offload MySQL query to a coroutine
                            local co = coroutine.create(perform_mysql_query)
                            local success, result = coroutine.resume(co, request_handle)
                            if not success then
                                request_handle:logWarn("Coroutine creation error: ", result)
                            end
                        end
                  # HTTP router filter should be the last one
                  - name: envoy.filters.http.router
                    typed_config: 
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: web_service
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: web_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: webui
                      port_value: 8080
